// <auto-generated />
using GroceryShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StudentProject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroceryShop.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("PriceAsString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Article");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 3,
                            CategoryId = 2,
                            ImagePath = "image/apple.jpg",
                            Name = "Apple",
                            Price = 2.5,
                            PriceAsString = "2.5"
                        },
                        new
                        {
                            Id = 2,
                            Category = 2,
                            CategoryId = 4,
                            ImagePath = "image/carrot.png",
                            Name = "Carrot",
                            Price = 3.0,
                            PriceAsString = "3.0"
                        },
                        new
                        {
                            Id = 3,
                            Category = 1,
                            CategoryId = 2,
                            ImagePath = "image/milk.jpg",
                            Name = "Milk",
                            Price = 4.5,
                            PriceAsString = "4.5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
